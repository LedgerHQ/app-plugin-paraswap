import { processTest } from "../../test.fixture";

const contractName = "Paraswap V4";
// From : https://etherscan.io/tx/0xc615fa3630a17b8e5b088b25f3514489fdd94c4f140801e055b6806bb5c3f8f3
const rawTxHex =
  "0xf9086b1c850cce4166008307b932941bd435f3c054b6e901b7b108a0ab7617c808677b80b908048f00eccb00000000000000000000000000000000000000000000000000000000000000200000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c5990000000000000000000000000000000000000000000000000000000001f65c6000000000000000000000000000000000000000000000000000000004bf5837e000000000000000000000000000000000000000000000000000000004c08fa86e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000076c65646765723200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000360000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000064c3fb89f934592a2d7a5d1aa87c504b4bffe428000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c59900000000000000000000000000000000000000000000000000000004cd4fb0d70000000000000000000000000000000000000000000000000000000001fb626b00000000000000000000000056178a0d5f301baf6cf3e1cd53d9863437345bf90000000000000000000000001bd435f3c054b6e901b7b108a0ab7617c808677b000000000000000000000000df36df36201044f544e55c6f026d209ad9a55f48000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000616cf89301ffffffffffffffffffffffffffffffffffffff10e7f1a1616cf8390000002b0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000001c22738251b375d2fe29b366ccdfcb295c5829f0d01cf039bbe53bf174a3fa12794a1c6d067f2d971f66f0b14b7e4a1c6c56dc84e9d4dd49becefd404ec440dee1000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000064c3fb89f934592a2d7a5d1aa87c504b4bffe428000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000000000000000000000000000000000004ccbb262500000000000000000000000000000000000000000000000000000004cd3cb9da000000000000000000000000a5d07e978398eb1715056d3ca5cb31035c02fdad0000000000000000000000001bd435f3c054b6e901b7b108a0ab7617c808677b000000000000000000000000df36df36201044f544e55c6f026d209ad9a55f48000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000616cf8ed0000000000000000000000000000000000000000000000000000017c91a9a1920000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000001ce8045b1f9a4f692c12d09f2c027689be50a46b9768a718ca17b98a6fa6c2e8dc58d21631665f910addb16671b9886e5102c15c4383450883c8b515184f75cb9d25a0d0ede5249700adbfe9ad359b0f6bbee8ed66afecc70ab96928287684a9b8a423a061cf71c28497fa3c5857aec280523b58da217f4fb1dc2e3cfc00bbbc0d66b370";
const testLabel = "Multi Swap"; // <= Name of the test
const testDirSuffix = "multi_swap_v4"; // <= directory to compare device snapshots to
const testNetwork = "ethereum";

const signedPlugin = false; // <== set to true if the plugin is already signed and available
const devices = [
  {
    name: "nanos",
    label: "Nano S",
    steps: 5 // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanox",
    label: "Nano X",
    steps: 5 // <= Define the number of steps for this test case and this device
  }
];



devices.forEach((device) =>
  processTest(device, contractName, testLabel, testDirSuffix, rawTxHex, signedPlugin,"",testNetwork)
);
